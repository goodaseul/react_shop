{"version":3,"file":"static/js/28.fbf27f3e.chunk.js","mappings":"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","sources":["components/Detail.js"],"sourcesContent":["// eslint\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { addItem } from \"./../store\";\r\nconst Detail = (props) => {\r\n    //redux store 가져와줌\r\n    let state = useSelector((state) => {\r\n        return state;\r\n    });\r\n    let dispatch = useDispatch();\r\n\r\n    let [isShow, setIsShow] = useState(true);\r\n    let [notice, setNotice] = useState(false);\r\n\r\n    let [num, setNum] = useState(\"\");\r\n    let [tab, setTab] = useState(0);\r\n    useEffect(() => {\r\n        if (isNaN(num)) {\r\n            setNotice(true);\r\n        } else {\r\n            setNotice(false);\r\n        }\r\n    }, [num]);\r\n\r\n    useEffect(() => {\r\n        let banner = setTimeout(() => {\r\n            setIsShow(false);\r\n        }, 2000);\r\n\r\n        return () => {\r\n            // useEffect 실행 전에 실행됨 cleanup function\r\n            // mount X unmount 페이지 이동할 때는 한번 실행하고 넘어감\r\n            clearTimeout(banner);\r\n        };\r\n    }, []);\r\n\r\n    let [count, setCount] = useState(0);\r\n\r\n    let { id } = useParams();\r\n    let findItem = props.shoes.find((item) => {\r\n        return (item.id = id);\r\n    });\r\n\r\n    useEffect(() => {\r\n        let getItem = localStorage.getItem(\"watched\");\r\n        getItem = JSON.parse(getItem);\r\n        getItem.push(findItem.id);\r\n\r\n        getItem = new Set(getItem);\r\n        getItem = Array.from(getItem);\r\n\r\n        localStorage.setItem(\"watched\", JSON.stringify(getItem));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"detail\">\r\n            <div className=\"wrap\">\r\n                {isShow ? <div className=\"banner\">2초 이내 구매시 할인</div> : \"\"}\r\n                {notice ? <div className=\"notice\">숫자만 입력하라고요</div> : \"\"}\r\n                <input\r\n                    onChange={(e) => {\r\n                        setNum(e.target.value);\r\n                    }}\r\n                    placeholder=\"숫자만 입력하셈\"\r\n                />\r\n                <button\r\n                    onClick={() => {\r\n                        setCount((count += 1));\r\n                    }}\r\n                >\r\n                    {count}\r\n                </button>\r\n                <div className=\"wrap_img\">\r\n                    <img src={`https://codingapple1.github.io/shop/shoes${Number(id) + 1}.jpg`} />\r\n                </div>\r\n                <div className=\"wrap_info\">\r\n                    <h2>{findItem.title}</h2>\r\n                    <p>{findItem.content}</p>\r\n                    <p>{findItem.price}</p>\r\n                    <button onClick={() => dispatch(addItem({ id: `${findItem.id}`, name: `${findItem.title}`, count: 1 }))} className=\"btn\">\r\n                        주문하기\r\n                    </button>\r\n                </div>\r\n                <div className=\"wrap_tab\">\r\n                    <ul className=\"tabs\">\r\n                        <li onClick={() => setTab(0)}>\r\n                            <a href=\"#!\">btn1</a>\r\n                        </li>\r\n                        <li onClick={() => setTab(1)}>\r\n                            <a href=\"#!\">btn2</a>\r\n                        </li>\r\n                        <li onClick={() => setTab(2)}>\r\n                            <a href=\"#\" onClick={(e) => e.preventDefault}>\r\n                                btn3\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                    <TabCont tab={tab}></TabCont>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TabCont = (props) => {\r\n    // if (props.tab === 0) {\r\n    //     return <div className=\"contents\">내용1</div>;\r\n    // } else if (props.tab === 1) {\r\n    //     return <div className=\"contents\">내용2</div>;\r\n    // } else {\r\n    //     return <div className=\"contents\">내용3</div>;\r\n    // }\r\n\r\n    let [effect, setEffect] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let effectTime = setTimeout(() => {\r\n            setEffect(\"end\");\r\n        }, 100);\r\n\r\n        return () => {\r\n            clearTimeout(effectTime);\r\n            setEffect(\"\");\r\n        };\r\n    }, [props.tab]);\r\n\r\n    return <div className={`start ${effect}`}>{[<div className=\"contents\">내용1</div>, <div className=\"contents\">내용2</div>, <div className=\"contents\">내용3</div>][props.tab]}</div>;\r\n};\r\n\r\nexport default Detail;\r\n"],"names":["TabCont","props","effect","setEffect","useState","useEffect","effectTime","setTimeout","clearTimeout","tab","_jsx","className","concat","children","useSelector","state","dispatch","useDispatch","isShow","setIsShow","notice","setNotice","num","setNum","setTab","isNaN","banner","count","setCount","id","useParams","findItem","shoes","find","item","getItem","localStorage","JSON","parse","push","Set","Array","from","setItem","stringify","_jsxs","onChange","e","target","value","placeholder","onClick","src","Number","title","content","price","addItem","name","href","preventDefault"],"sourceRoot":""}